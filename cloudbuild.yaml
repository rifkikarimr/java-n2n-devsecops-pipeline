steps:
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |-
        # Tahap 1: Instalasi semua perangkat yang dibutuhkan
        echo "--> Menginstal Maven, OpenJDK, Wget, dan Python..."
        apt-get update && apt-get install -y maven openjdk-17-jdk wget python3 python3-pip

        # Tahap 2: Jalankan SAST Scan (SonarCloud)
        echo "--> Menjalankan SonarCloud SAST Scan..."
        mvn verify sonar:sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=krmdev \
          -Dsonar.projectKey=rifkikarimr_java-n2n-devsecops-pipeline \
          -Dsonar.token=${_SONAR_TOKEN}

        # Tahap 3: Jalankan SCA Scan (Snyk)
        echo "--> Menjalankan Snyk SCA Scan..."
        # Menggunakan '|| true' untuk memastikan skrip lanjut meskipun Snyk menemukan isu
        mvn snyk:test -Dsnyk.org=${_SNYK_ORG} -Dsnyk.jsonOutputFile=snyk_report.json || true

        # Tahap 4: Jalankan DAST Scan (OWASP ZAP)
        echo "--> Menjalankan OWASP ZAP DAST Scan..."
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.16.0/ZAP_2.16.0_Linux.tar.gz
        tar -xvf ZAP_2.16.0_Linux.tar.gz
        cd ZAP_2.16.0
        # Menjalankan scan dan membuat kedua laporan. Menggunakan '|| true' untuk melanjutkan.
        ./zap.sh -cmd -quickurl https://www.samudera.id -quickout ../zap_report.html || true
        ./zap.sh -cmd -quickurl https://www.samudera.id -quickout ../zap_report.json || true
        cd ..

        # Tahap 5: Jalankan AI Summary
        echo "--> Menjalankan AI Security Summary..."
        pip3 install google-generativeai
        python3 summarize_reports.py
    
    env:
      - 'SNYK_TOKEN=${_SNYK_TOKEN}'
    secretEnv: ['GEMINI_API_KEY', '_SONAR_TOKEN']
    id: 'All-In-One DevSecOps Pipeline'

# Menyimpan semua laporan yang dihasilkan
artifacts:
  objects:
    location: 'gs://java-devsecops-pipeline'
    paths:
      - 'snyk_report.json'
      - 'zap_report.json'
      - 'zap_report.html'

# Mengakses Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/GEMINI_API_KEY/versions/latest
    env: 'GEMINI_API_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/SONAR_TOKEN/versions/latest
    env: '_SONAR_TOKEN'

options:
  logging: CLOUD_LOGGING_ONLY